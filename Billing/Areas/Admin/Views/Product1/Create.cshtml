@model BusinessObjectLayer.CommonModels.ProductModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPage1.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Add Products</h3>
            </div>
            <div class="row box-body">
                <div class="col-md-8">
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12">Product Name</label>
                        <div class="col-md-9 col-sm-9 col-xs-12">
                            <input type="hidden" class="form-control" id="txtProductId" value="@Model.ID" name="@Model.ID">
                            <input type="text" class="form-control" id="txtProductName" value="@Model.ProductName" name="@Model.ProductName" placeholder="Default Input">
                        </div>
                    </div>
                    <div class="divider">&nbsp;</div>
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12">Description</label>
                        <div class="col-md-9 col-sm-9 col-xs-12">
                            <textarea class="form-control" name="@Model.Description" id="txtProductDesc">@Model.Description</textarea>
                        </div>
                    </div>
                    <div class="divider">&nbsp;</div>

                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12">Price</label>
                        <div class="col-md-9 col-sm-9 col-xs-12">
                            <input type="text" class="form-control" id="txtProductPrice" value="@Model.Price" name="@Model.Price" placeholder="Default Input">
                        </div>
                    </div>
                    <div class="divider">&nbsp;</div>
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12">Category</label>
                        <div class="col-md-9 col-sm-9 col-xs-12">
                            @*<input type="hidden" id="hdnCategoryId" value="@(Model.ParentID)" />*@
                            <select class="form-control select2_single " id="ddnCategory">
                                <option value="0">Select Category Name</option>
                                @if (Model.CategoryList != null)
                                {
                                    foreach (var item in Model.CategoryList)
                                    {
                                        string isSelected = string.Empty;
                                        if (item.CategoryId == Model.CategoryId)
                                        {
                                            isSelected = "selected";
                                        }
                                        <option value="@item.CategoryId" @isSelected>@item.CategoryName</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="divider">&nbsp;</div>
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12">Product Image</label>
                        <div class="col-md-9 col-sm-9 col-xs-12">
                            <input type="file" class="form-control" id="uploadProductImage" value="@Model.Image" name="@Model.Image" placeholder="Default Input">
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        @{
                            string imageBase64 = string.Empty;
                            string imageBase64Src = string.Empty;
                            string classHide = "hide";
                            if (!string.IsNullOrWhiteSpace(Model.Image))
                            {
                                imageBase64 = Model.Image;// Convert.ToBase64String(Model.Photo);
                                imageBase64Src = "data:image/" + Model.ImageType + ";base64," + imageBase64;
                                classHide = string.Empty;
                            }
                        }
                        <img class="@classHide imageRegistration" src="@imageBase64Src" id="imageProduct" />
                        <input type="hidden" id="hdnImageBase64" value="@imageBase64" />
                        <input type="hidden" id="hdnImageBase64Ext" value="@Model.ImageType" />
                    </div>
                </div>
            </div>
            <div class="box-footer">
                <button class="btn btn-primary" id="btnSaveProduct">Save</button>
                <button class="btn btn-danger" id="">Cancel</button>

            </div>
        </div>
    </div>
</div>

<script>
    //var _CategoryName = $("#txtCategoryName");
    //var _ParentId = $("#ddnCategory option:selected");
    //var hdrTextSaveProduct = "Add Product";
    //var hdrTextEditProduct = "Edit Product";
    //function initProduct() {
    //    var _CategoryName = $("#txtCategoryName");
    //    var _ParentId = $("#ddnCategory option:selected");
    //}

    $(document).ready(function () {
        //Save product
        $(document).on("click", "#btnSaveProduct", function (e) {
            e.stopImmediatePropagation();
            var productPrice = "0";
            if (_productPrice.val().trim() == "") {
                productPrice = "0";
            } else {
                productPrice = _productPrice.val().trim();
            }
            var _productId = $("#txtProductId").val();
            if (_productId.trim() == "") {
                _productId = "0";
            }
            var _productRegistrationModal = {
                ID: _productId,
                ProductName:$("#txtProductName").val(),
                Description: $("#txtProductDesc"),
                Price: $("#txtProductPrice").val(),
                CategoryId:  $("#ddnCategory option:selected").val(),
                Image: _productImageBase64.val(),
                ImageType: _productImageBase64Ext.val()
            };
            
            $.ajax({
                url: folderBaseURL + "Admin/Product1/AddProduct",
                type: "POST",
                data: _productRegistrationModal,
                success: function (response) {
                    clearModalProducts();
                },
                error: function (err) {
                    toastr.error("Product registration failed: Internal server error");
                   console.log(err);
                }
            });
        });
        $(document).on("change", "#uploadProductImage", function (e) {
            if (this.files && this.files[0]) {
                var _filesName = this.files[0];
                var FR = new FileReader();
                FR.onload = function (e) {
                    var _imageSrcB64 = e.target.result;
                    var _extension = GetProperImageExtension(_filesName.name.split('.').pop().toLowerCase());
                    imageShowHide(_imageSrcB64, true, _extension);
                };
                FR.readAsDataURL(this.files[0]);
            }
        });
        
    });
    function clearModalProducts() {
        $("#txtProductName").val("");
        $("#txtProductDesc").val("");
        $("#txtProductPrice").val("");
        $("#ddnCategory").val("0");
        $("#uploadProductImage").val("");
        imageShowHide("", false, "");
    }
    function GetProperImageExtension(_ImageExt) {
        if (_ImageExt != undefined && _ImageExt != null && (_ImageExt.trim().toLowerCase() == "jpg" || _ImageExt.trim().toLowerCase() == "jpeg")) {
            _ImageExt = "jpeg";
            return _ImageExt;
        } else if (_ImageExt != undefined && _ImageExt != null && (_ImageExt.trim().toLowerCase() == "png")) {
            _ImageExt = "png";
            return _ImageExt;
        } else if (_ImageExt != undefined && _ImageExt != null && (_ImageExt.trim().toLowerCase() == "gif")) {
            _ImageExt = "gif";
            return _ImageExt;
        } else {
            return _ImageExt;
        }
    }
    function imageShowHide(_imgSrc, _isVisible, _fileExt) {
        if (_fileExt != undefined && _fileExt != null && _fileExt.trim() != "") {
            _fileExt = _fileExt.trim();
        } else {
            _fileExt = "";
        }
        var _image = $("#imageProduct");
        _productImageBase64.val('');
        _productImageBase64Ext.val('');
        if (_isVisible) {
            _image.removeClass("hide");
            _image.attr("src", _imgSrc);
            var _imageBase64Hdn = _imgSrc.replace("data:image/" + _fileExt + ";base64,", "");
            _productImageBase64.val(_imageBase64Hdn);
            _productImageBase64Ext.val(_fileExt);
        } else {
            if (!_image.hasClass("hide")) {
                _image.addClass("hide");
            }
            _image.attr("src", "");
        }
    }
    </script>